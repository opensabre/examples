plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'io.github.opensabre'
version = '0.0.1-SNAPSHOT'

ext {
    lombokVersion = '1.18.30'
    opensabreVersion = '0.1.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

// 统一的编译器参数配置
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add '-parameters'
    options.encoding = 'UTF-8'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // Lombok配置
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

    // 项目依赖
    implementation "io.github.opensabre:opensabre-starter-cache:${opensabreVersion}"
    implementation "io.github.opensabre:opensabre-starter-boot:${opensabreVersion}"
    
    // 测试依赖
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

// 添加一些有用的任务配置
tasks.withType(Test).configureEach {
    systemProperty 'file.encoding', 'UTF-8'
}

// 配置jar任务
jar {
    enabled = true
    archiveClassifier = ''
}
